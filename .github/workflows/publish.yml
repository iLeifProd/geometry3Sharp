name: Publish

on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - uses: actions/checkout@v2

      - name: Git LFS pull
        run: git lfs pull

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Build, test & analyze solution
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"SutroMachine_Sutro.geometry3Sharp" /o:"sutromachine" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:"sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml"
          dotnet test --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Publish on version change
        id: publish_nuget
        uses: AraHaan/publish-nuget@patch-2
        with:
          # Relative to repository root
          PROJECT_FILE_PATH: Sutro.geometry3Sharp/Sutro.geometry3Sharp.csproj

          # Regex pattern to extract version info in a capturing group
          VERSION_REGEX: <Version>(.*)<\/Version>

          # Flag to enable / disable git tagging
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with version
          TAG_FORMAT: v*

          # nuget.org API key
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
